// Code generated by MockGen. DO NOT EDIT.
// Source: configs/config.go
//
// Generated by this command:
//
//	mockgen -source=configs/config.go -destination=movies/mock/config_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfig is a mock of Config interface.
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
	isgomock struct{}
}

// MockConfigMockRecorder is the mock recorder for MockConfig.
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance.
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// GetApiKey mocks base method.
func (m *MockConfig) GetApiKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApiKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetApiKey indicates an expected call of GetApiKey.
func (mr *MockConfigMockRecorder) GetApiKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiKey", reflect.TypeOf((*MockConfig)(nil).GetApiKey))
}

// GetPort mocks base method.
func (m *MockConfig) GetPort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPort indicates an expected call of GetPort.
func (mr *MockConfigMockRecorder) GetPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPort", reflect.TypeOf((*MockConfig)(nil).GetPort))
}

// SearchMoviesUrl mocks base method.
func (m *MockConfig) SearchMoviesUrl() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchMoviesUrl")
	ret0, _ := ret[0].(string)
	return ret0
}

// SearchMoviesUrl indicates an expected call of SearchMoviesUrl.
func (mr *MockConfigMockRecorder) SearchMoviesUrl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchMoviesUrl", reflect.TypeOf((*MockConfig)(nil).SearchMoviesUrl))
}
