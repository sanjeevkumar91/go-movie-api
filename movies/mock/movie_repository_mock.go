// Code generated by MockGen. DO NOT EDIT.
// Source: movies/repository/movie_repository.go
//
// Generated by this command:
//
//	mockgen -source=movies/repository/movie_repository.go -destination=movies/mock/movie_repository_mock.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	model "go-movie-api/movies/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMovieRespository is a mock of MovieRespository interface.
type MockMovieRespository struct {
	ctrl     *gomock.Controller
	recorder *MockMovieRespositoryMockRecorder
	isgomock struct{}
}

// MockMovieRespositoryMockRecorder is the mock recorder for MockMovieRespository.
type MockMovieRespositoryMockRecorder struct {
	mock *MockMovieRespository
}

// NewMockMovieRespository creates a new mock instance.
func NewMockMovieRespository(ctrl *gomock.Controller) *MockMovieRespository {
	mock := &MockMovieRespository{ctrl: ctrl}
	mock.recorder = &MockMovieRespositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMovieRespository) EXPECT() *MockMovieRespositoryMockRecorder {
	return m.recorder
}

// AddToMovieCart mocks base method.
func (m *MockMovieRespository) AddToMovieCart(movie model.GetMovieDetailsResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToMovieCart", movie)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToMovieCart indicates an expected call of AddToMovieCart.
func (mr *MockMovieRespositoryMockRecorder) AddToMovieCart(movie any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToMovieCart", reflect.TypeOf((*MockMovieRespository)(nil).AddToMovieCart), movie)
}

// GetMoviesInCart mocks base method.
func (m *MockMovieRespository) GetMoviesInCart() ([]model.GetMovieDetailsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMoviesInCart")
	ret0, _ := ret[0].([]model.GetMovieDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMoviesInCart indicates an expected call of GetMoviesInCart.
func (mr *MockMovieRespositoryMockRecorder) GetMoviesInCart() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMoviesInCart", reflect.TypeOf((*MockMovieRespository)(nil).GetMoviesInCart))
}
